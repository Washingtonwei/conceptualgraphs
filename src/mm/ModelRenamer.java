/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mm;

import charger.Global;
import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * A panel that displays model identifying information and allows a user to 
 * change model identifying information. 
 * Does not change the actual content of the model.
 * @author hsd
 */
public class ModelRenamer extends JFrame {

    String oldmodelname = null;    
    String newmodelname = null;
    
    MFile modelFile = null;
//    MModelID oldmodelID = null;
//    MModelID newmodelID = null;
    
    MMAnalysisMgr analyzer = null;
    MMModelMgr modelMgr = null;
    /**
     * Creates new form ModelRenamer
     * @param modelMgr The analyzer that invoked this one, so that the renamer can use some 
     * of its methods.
     * @param modelname The original model name that may potentially be changed.
     * @since 3.8.2
     * 
     */
    public ModelRenamer( MMModelMgr modelMgr, String modelname ) throws MModelNameException {
        this.modelMgr = modelMgr;
        this.analyzer = modelMgr.getFrame().getAnalyzer();
        initComponents();
        groupName.setModel(new javax.swing.DefaultComboBoxModel( modelMgr.getPredefinedGroups().toArray() ));
        oldModelName.setText( modelname );
        this.getContentPane().setBackground( Global.chargerBlueColor );
        groupName.setBackground( new Color(204, 204, 204) );
        this.modelMgr = modelMgr;
        this.oldmodelname = modelname + "." + MMConst.MMATModelExtension;
        modelFile = new MFile( modelname );
//        this.oldmodelID = new MModelID( oldmodelname );
        fillInFields();
    }

        /**
     * Checks if all the user fields are filled out
     *
     * @return true - no fields were selected, false otherwise
     */
    private boolean fieldsAreLegal() {
        //See if any fields are not set, inform the user and return
        String emptyFields = "";
        if (userID.getText().isEmpty()) {
            emptyFields += "  User ID";
        }
        if ((teamName.getText().isEmpty())) {
            emptyFields += "  Team ID";
        }

        if (phase.getSelectedItem().toString().equalsIgnoreCase("Select")) {
            emptyFields += "  Phase";
        }
        if (groupName.getSelectedItem().toString().equalsIgnoreCase("Select")) {
            emptyFields += "  Group";
        }

        if (! emptyFields.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter the following: \n" + emptyFields);
            return false;
        }
        
        if ( containsIllegalChars( "Group name", (String)groupName.getSelectedItem() )) return false;
        if ( containsIllegalChars( "Team name", teamName.getText() )) return false;
        if ( containsIllegalChars( "User name", userID.getText() )) return false;
        
        return true;

    }
    
    /**
     * Determines whether there are any bad characters in a name.
     * @param label to precede the error message
     * @param s the name to be examined
     * @return true if there any bad characters; false if it's ok.
     */
    protected boolean containsIllegalChars( String label, String s ) {
        if ( s != null ) {
            if ( s.contains( "_" ) || s.contains( "." ) || s.contains( " " ) ) {
                JOptionPane.showMessageDialog( this, label + ": \"" + s
                        + "\" cannot contain underscores, spaces or periods. Please try again." );
                return true;
            }
        } else 
            return true;
        return false;
    }

    /**
     * Initialize fields with old model information.
     */
    private void fillInFields() {
        groupName.removeAllItems();
       // for ( String s : analyzer.currentProj.getGroupList() ) {
        for ( String s : modelMgr.getPredefinedGroups() ) {
            groupName.addItem( s );
        }
        groupName.setSelectedItem( modelFile.getGroup() );
        
        phase.removeAllItems();
        for ( MPhase p : MPhase.values() ) {
            phase.addItem(  p.name() );
        }
        phase.setSelectedItem( modelFile.getMphase().toString() );
        
        teamName.setText( modelFile.getTeam() );
        
        userID.setText( modelFile.getUser() );
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        groupName = new javax.swing.JComboBox();
        phase = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        renameBtn = new javax.swing.JButton();
        userID = new javax.swing.JTextField();
        teamName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        oldModelName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setTitle("Rename One Model");
        setBackground(Global.chargerBlueColor);
        setLocation(new java.awt.Point(150, 150));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Group");

        groupName.setEditable(true);
        groupName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        groupName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "PY102", "ISE670" }));
        groupName.setToolTipText("Select the class");
        groupName.setLocation(new java.awt.Point(150, 150));
        groupName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupNameActionPerformed(evt);
            }
        });

        phase.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        phase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "Beginning", "Middle", "End" }));
        phase.setName("phase"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Phase");

        cancelBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("User Id");
        jLabel1.setLocation(new java.awt.Point(100, 100));

        renameBtn.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        renameBtn.setText("Rename");
        renameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameBtnActionPerformed(evt);
            }
        });

        userID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        userID.setName("subjectId\n"); // NOI18N
        userID.setSelectionColor(new Color(156, 156, 156));

        teamName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        teamName.setToolTipText("Enter Group /Team Id");
        teamName.setMinimumSize(new java.awt.Dimension(10, 16));
        teamName.setSelectionColor(new Color(156, 156, 156));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Team Id");

        oldModelName.setBackground(new Color(255, 255, 255));
        oldModelName.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        oldModelName.setForeground(new Color(255, 255, 255));
        oldModelName.setText(oldmodelname);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel4.setForeground(new Color(255, 255, 255));
        jLabel4.setText("Rename model:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(teamName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 254, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 81, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel5))
                        .add(12, 12, 12)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(cancelBtn)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(renameBtn))
                            .add(groupName, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(phase, 0, 256, Short.MAX_VALUE)
                            .add(userID)))))
            .add(layout.createSequentialGroup()
                .add(38, 38, 38)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel4)
                    .add(oldModelName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 380, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(oldModelName)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(groupName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(teamName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(phase, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(15, 15, 15)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(userID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 42, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(renameBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cancelBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void groupNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_groupNameActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        //System.exit(0);
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void renameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameBtnActionPerformed
        if ( !fieldsAreLegal() ) {
            Global.error( "Something went wrong - model renamer shouldn't ever do this." );
            return;
        } else {
            modelFile.setGroup( (String)groupName.getSelectedItem() );
            modelFile.setTeam( teamName.getText() );
            modelFile.setUser( userID.getText() );
            modelFile.setPhase( MPhase.valueOf( (String)phase.getSelectedItem()).abbr() );
            modelFile.setExtension( MMConst.MMATModelExtension );
            modelFile.setType( MFileType.MODEL );
            newmodelname = modelFile.makeFilename();
            
            MMFileManager filemgr = new MMFileManager( modelMgr.getProject().MMSubmittedFolder );
            boolean status = filemgr.renameOneFile( oldmodelname, newmodelname );
            if ( status ) {
//                analyzer.refreshAnalysisWindow( false );
                analyzer.refreshAnalysisWindow( false );
                analyzer.initializeTopPanels();

                analyzer.refreshForNewGroup( modelFile.getGroup() );  // needs to reload the group  
                analyzer.mmf.teamList.setSelectedValue( modelFile.getTeam(), true );

            }
            analyzer.refreshAnalysisWindow( false );     // refresh all the lists if a team has moved

        } 
    }//GEN-LAST:event_renameBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox groupName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel oldModelName;
    private javax.swing.JComboBox phase;
    private javax.swing.JButton renameBtn;
    private javax.swing.JTextField teamName;
    private javax.swing.JTextField userID;
    // End of variables declaration//GEN-END:variables
}
